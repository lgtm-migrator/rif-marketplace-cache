---
name: RIF Marketplace CACHE deploy

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-**'
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - features/devops

jobs:
  deploy-staging:
    name: RIF Marketplace CACHE - Staging
    runs-on: ubuntu-latest
    environment:
      name: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node 14
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.STAGING_AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract Git Tag
        run: echo "GIT_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Echo git tag
        run: echo "${{ env.GIT_TAG }}"

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: rif-marketplace-cache
          IMAGE_TAG: latest
        run: |
           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Send a command to EC2 instance(s)
        run: |
           aws ssm send-command \
               --instance-ids "i-03882e46fb18eb0a8" \
               --document-name "AWS-RunShellScript" \
               --comment "IP config" \
               --parameters commands=ifconfig \
               --output text --region=${{ secrets.STAGING_AWS_REGION }}

      - name: Deploy rif-marketplace-cache staging
        run: |
            aws ssm send-command \
                --document-name "AWS-RunShellScript" \
                --targets '[{"Key":"InstanceIds","Values":["i-03882e46fb18eb0a8"]}]' \
                --parameters '{"commands":["#!/bin/bash",","cd /home/ubuntu/rif-marketplace-cache","dbdir=$(sudo docker volume inspect -f '{{.Mountpoint}}' "rif-marketplace-cache_cache-db")","sudo cp "$dbdir/db.sqlite" ~/db.sqlite-backup-$(date +%Y%m%d%H%M%S)"]}' \
                --region=${{ secrets.STAGING_AWS_REGION }}
